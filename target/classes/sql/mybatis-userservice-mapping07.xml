<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- resultMap 사용 - 필드명과 컬럼명이 다를 때 select 문 실행하려면 AS 사용해야 하는 번거로움
이때, resultMap 을 한번 만들어두면 이런 번거로움을 해결할 수 있다

2. 쿼리문 중에서 가장 많이 사용하는 쿼리문 select 이다
조건이 바뀔때마다 계속 select문이 생성되어져야 한다...정적인 쿼리문
 -->

<mapper namespace="UserMapper07">

	<resultMap type="user" id="userSelectRM">    <!-- select 구문일 때 alias 매번 쓰기 귀찮고 힘드니까 사용한다 -->
		<result property="userId" column="user_id"/>
		<result property="userName" column="user_name"/>
		<result property="password" column="password"/>
		<result property="age" column="age"/>
		<result property="grade" column="grade"/>
		<result property="regDate" column="reg_date"/>
	</resultMap>
	
	<!-- 이런게 정적인 쿼리 문 _Static Query이고 여태까지 이렇게 해왔다 -->
	<select id="getUserList" resultMap="userSelectRM" parameterType="string">
		SELECT 
		user_id, user_name, password, age, grade, reg_date
		FROM users
		WHERE user_name=#{VALUE}
	</select>
	
	
	<!-- <select id="getUserList01" resultMap="userSelectRM" parameterType="user">
		SELECT 
		user_id, user_name, password, age, grade, reg_date
		FROM users
		WHERE user_id=#{userId}
	</select> -->
	
	
	<!-- 동적인 쿼리 문 _Dynamic Query이고 여태까지 이렇게 해왔다 (select문에서만 해당함)-->
	<select id="getUserList01" resultMap="userSelectRM" parameterType="user">
		SELECT 
		user_id, user_name, password, age, grade, reg_date
		FROM users
		<where>
			<if test="userName !=null">
				user_name LIKE #{userName}
			</if>
			<if test="age !=null">
				OR age LIKE #{age}
			</if>
		</where>
		
		ORDER BY user_id DESC
	</select>
	
</mapper>